/* ==========================================================================
  HEADER
  ========================================================================== */

$co_header-hamburger: $co_color-light;
$an_header-mobile-animation: cubic-bezier(0.32, -0.01, 0, 0.99);

.c-header {
  .is-menu-open & {
    @include mq($until: desktop) {
      height: 100vh;
      position: fixed;
      width: 100%;
      z-index: 10;
    }
  }
}

.c-header__nav {
  @include mq($until: desktop) {
    margin: 0;
    position: relative;
  }
}

.c-header__list {
  @include list-reset;

  @include mq($until: desktop) {
    align-content: center;
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: center;
    left: 0;
    padding: 0;
    position: fixed;
    text-align: center;
    top: 0;
    transform: translate(100%, 0);
    transition: transform 1s $an_header-mobile-animation;
    width: 100%;
    z-index: 1; // just to be sure it goes on top

    @for $i from 1 through 5 {
      .t-palette-color--#{$i} & {
        background-color: var(--co_palette-#{$i}--lighten);
      }
    }

    .c-header__toggle:checked ~ & {
      transform: translate(0, 0);
      transition: transform 1s $an_header-mobile-animation;
    }
  }

  @include mq(desktop) {
    padding: $sp_variable-m 0;
    text-align: right;
  }
}

.c-header__item {
  @include list-item-reset;

  display: block;

  @include mq($until: desktop) {
    @include ty-heading--l;

    margin-bottom: $sp_variable-m;
  }

  @include mq(desktop) {
    display: inline-block;
    margin-bottom: 0;

    &::before {
      color: $co_color-main;
      content: 'â€¢';
    }
  }

  .c-header__item + & {
    @include mq(desktop) {
      margin-left: $sp_variable-m;
    }
  }
}

.c-header__link {
  @include mq($until: desktop) {
    color: $co_color-light;

    &:hover {
      color: $co_color-light;
    }
  }

  @media (hover: hover) { // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover -> The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.
    &:hover {
      border-bottom: rem(1) solid $co_color-main;
      padding-bottom: rem(4);
      text-decoration: none;

      @for $i from 1 through 5 {
        .t-palette-color--#{$i} & {
          border-color: var(--co_palette-#{$i}--lighten);
        }
      }
    }
  }

  &[data-state= 'active'] { // current page
    font-weight: $font-sans-weight-bold;

    @include mq(desktop) {
      border-bottom: rem(4) solid $co_color-main;
      font-weight: $font-sans-weight-default;
      padding-bottom: rem(4);

      @for $i from 1 through 5 {
        .t-palette-color--#{$i} & {
          border-color: var(--co_palette-#{$i}--lighten);
        }
      }

      &:hover {
        text-decoration: none;
      }
    }
  }
}

/* ---------
  Mobile header toggle
--------- */

.c-header__toggle { // checkbox
  height: 45px;
  opacity: 0;
  position: absolute;
  right: 10px;
  top: 10px;
  width: 45px;
  z-index: 2;

  @include mq($until: desktop) {
    &:checked {
      z-index: 2; // TODO: check z-indexes!
    }
  }

  @include mq(desktop) {
    display: none;
  }
}

.c-header__hamburger {
  background: $co_header-hamburger;
  display: block;
  height: 2px;
  position: absolute;
  right: 20px;
  top: 30px;
  transition: background 1s;
  width: 30px;
  z-index: 1;

  .c-header__toggle:checked ~ & {
    background: transparent;
    transition: background 1s;
    z-index: 2; // TODO: check z-indexes!
  }

  &::before {
    background: $co_header-hamburger;
    content: '';
    height: 2px;
    left: 0;
    position: absolute;
    top: 10px;
    transition: transform 1s;
    width: 30px;

    .c-header__toggle:checked ~ & {
      transform: translateY(-5px) rotate(-45deg);
      transition: transform 1s;
    }
  }

  &::after {
    background: $co_header-hamburger;
    bottom: 10px;
    content: '';
    height: 2px;
    left: 0;
    position: absolute;
    transition: transform 1s;
    width: 30px;

    .c-header__toggle:checked ~ & {
      transform: translateY(15px) rotate(45deg);
      transition: transform 1s;
    }
  }

  @include mq(desktop) {
    display: none;
  }
}
