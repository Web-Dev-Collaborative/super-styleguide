/* ==========================================================================
  HEADER
  ========================================================================== */

$co_header-hamburger: $co_color-light;
$an_header-mobile-animation: cubic-bezier(0.32, -0.01, 0, 0.99);

$sp_header-z-index-m: 10;
$sp_header-hamburger-z-index-m: $sp_header-z-index-m + 1;

.c-header {
  .is-menu-open & {
    @include mq($until: desktop) {
      height: 100vh;
      position: fixed;
      width: 100%;
      z-index: $sp_header-z-index-m;
    }
  }
}

.c-header__nav {
  @include mq($until: desktop) {
    margin: 0;
    position: relative;
  }
}

.c-header__list {
  @include list-reset;

  @include mq($until: desktop) {
    align-content: center;
    background-color: var(--co_palette--lighten);
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: center;
    left: 100%; // start to left: 100% -> fix issue https://gitlab.com/giuliach/super-styleguide/-/issues/23
    padding: 0;
    position: fixed;
    text-align: center;
    top: 0;
    transform: translate3d(0, 0, 0);
    transition: transform 1s $an_header-mobile-animation;
    width: 100%;
    z-index: $sp_header-z-index-m;

    .c-header__toggle:checked ~ & {
      transform: translate3d(-100%, 0, 0);
      transition: transform 1s $an_header-mobile-animation;
    }
  }

  @include mq(desktop) {
    padding: $sp_variable-m 0;
    text-align: right;
  }
}

.c-header__item {
  @include list-item-reset;

  display: block;

  @include mq($until: desktop) {
    @include ty-heading--l;

    margin-bottom: $sp_variable-m;
  }

  @include mq(desktop) {
    display: inline-block;
    margin-bottom: 0;

    &::before {
      color: var(--co_text);
      content: 'â€¢';
    }
  }

  .c-header__item + & {
    @include mq(desktop) {
      margin-left: $sp_variable-m;
    }
  }
}

.c-header__link {
  @include mq($until: desktop) {
    color: $co_color-light;

    &:hover {
      color: $co_color-light;
    }
  }

  @media (hover: hover) { // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover -> The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.
    &:hover {
      border-bottom: rem(1) solid $co_color-main;
      border-color: var(--co_palette--lighten);
      padding-bottom: rem(4);
      text-decoration: none;
    }
  }

  &[data-state= 'active'] { // current page
    font-weight: $font-sans-weight-bold;

    @include mq(desktop) {
      border-bottom: rem(4) solid $co_color-main;
      border-color: var(--co_palette--lighten);
      font-weight: $font-sans-weight-default;
      padding-bottom: rem(4);

      &:hover {
        text-decoration: none;
      }
    }
  }

  &.is-current-section:not([data-state= 'active']) { // e.g. is a tutorial from "tutorials" section
    @include mq(desktop) {
      border-bottom: rem(2) dotted $co_color-main;
      border-color: var(--co_palette--lighten);
      font-weight: $font-sans-weight-default;
      padding-bottom: rem(4);
    }
  }
}

/* ---------
  Mobile header toggle
--------- */

$sp_header-toggle-width: rem(45); // clickable area
$sp_header-hamburger-line: rem(2);

.c-header__toggle { // checkbox
  height: $sp_header-toggle-width;
  margin: 0; // reset checkbox margins
  opacity: 0;
  position: absolute;
  right: rem(10);
  top: rem(10);
  width: $sp_header-toggle-width;
  z-index: $sp_header-hamburger-z-index-m;

  @include mq(desktop) {
    display: none;
  }
}

.c-header__hamburger {
  background: $co_header-hamburger;
  display: block;
  height: $sp_header-hamburger-line;
  position: absolute;
  right: rem(20);
  top: rem(30);
  transition: background 1s;
  width: rem(30);
  z-index: $sp_header-hamburger-z-index-m;

  .c-header__toggle:checked ~ & {
    background: transparent;
    transition: background 1s;
  }

  &::before {
    background: $co_header-hamburger;
    content: '';
    height: $sp_header-hamburger-line;
    left: 0;
    position: absolute;
    top: rem(10);
    transition: transform 1s;
    width: rem(30);

    .c-header__toggle:checked ~ & {
      transform: translateY(-5px) rotate(-45deg);
      transition: transform 1s;
    }
  }

  &::after {
    background: $co_header-hamburger;
    bottom: rem(10);
    content: '';
    height: $sp_header-hamburger-line;
    left: 0;
    position: absolute;
    transition: transform 1s;
    width: rem(30);

    .c-header__toggle:checked ~ & {
      transform: translateY(15px) rotate(45deg);
      transition: transform 1s;
    }
  }

  @include mq(desktop) {
    display: none;
  }
}
